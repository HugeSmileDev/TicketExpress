syntax = "proto3";
package ticketingapp;

option go_package = "proto-gen/ticket";

// TicketService provides methods for ticket purchasing and management.
service TicketService {
    rpc SubmitPurchase(PurchaseRequest) returns (Receipt);
    rpc AllocateSeat (SeatAllocationRequest) returns (SeatAllocationResponse);
    rpc GetReceiptDetails (ReceiptDetailsRequest) returns (Receipt);
    rpc GetUsersBySection (SectionRequest) returns (UsersBySectionResponse);
    rpc RemoveUser (RemoveUserRequest) returns (RemoveUserResponse);
    rpc ModifySeat (ModifySeatRequest) returns (ModifySeatResponse);
}

// Submit a Purchase for a Ticket
message PurchaseRequest {
  string from = 1;
  string to = 2;
  User user = 3;
  float price_paid = 4;
}

message Receipt {
  string receipt_id = 1;
  string from = 2;
  string to = 3;
  User user = 4;
  float price_paid = 5;
}

message User {
  string first_name = 1;
  string last_name = 2;
  string email = 3;
}


// Allocate a seat for the user

message SeatAllocationRequest {
  string user_id = 1;
  string section = 2;
}

message SeatAllocationResponse {
  string seat_number = 1;
  string section = 2;
}

// Show Details of the Receipt for the User

message ReceiptDetailsRequest {
  string receipt_id = 1;
}

// View Users and Seats Allocated by Section

message SectionRequest {
  string section = 1;
}

message UsersBySectionResponse {
  repeated UserSeatMapping user_seat_mapping = 1;
}

message UserSeatMapping {
  string user_id = 1;
  string seat_number = 2;
}

// Remove a User from the Train

message RemoveUserRequest {
  string user_id = 1;
}

message RemoveUserResponse {
  bool success = 1;
}

// Modify a User's Seat

message ModifySeatRequest {
  string user_id = 1;
  string new_seat_number = 2;
}

message ModifySeatResponse {
  bool success = 1;
}